{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/aymak91/CIT-382/project-3-starter-sample/src/index.js\";\nimport { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this), rootElement);\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  let store = configureStore();\n  const root = document.getElementById(\"root\");\n\n  if (window.currentUser) {\n    const preloadedState = {\n      entities: {\n        users: {\n          [window.currentUser.id]: window.currentUser\n        }\n      },\n      session: {\n        id: window.currentUser.id\n      }\n    };\n    store = configureStore(preloadedState);\n    delete window.currentUser;\n  } else {\n    store = configureStore();\n  } // FOR TESTING ONLY\n\n\n  window.store = store;\n  window.getState = store.getState; // window.dispatch = store.dispatch;\n  // FOR TESTING ONLY\n  // ReactDOM.render(<Root store={ store } />, root);\n});","map":{"version":3,"sources":["/home/aymak91/CIT-382/project-3-starter-sample/src/index.js"],"names":["StrictMode","ReactDOM","App","rootElement","document","getElementById","render","addEventListener","store","configureStore","root","window","currentUser","preloadedState","entities","users","id","session","getState"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACAJ,QAAQ,CAACK,MAAT,eACE,QAAC,UAAD;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEH,WAJF;AAOAC,QAAQ,CAACG,gBAAT,CAA0B,kBAA1B,EAA8C,MAAM;AAClD,MAAIC,KAAK,GAAGC,cAAc,EAA1B;AACA,QAAMC,IAAI,GAAGN,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAb;;AAEA,MAAIM,MAAM,CAACC,WAAX,EAAwB;AACtB,UAAMC,cAAc,GAAG;AACnBC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,KAAK,EAAE;AAAE,WAACJ,MAAM,CAACC,WAAP,CAAmBI,EAApB,GAAyBL,MAAM,CAACC;AAAlC;AADD,OADS;AAInBK,MAAAA,OAAO,EAAE;AAAED,QAAAA,EAAE,EAAEL,MAAM,CAACC,WAAP,CAAmBI;AAAzB;AAJU,KAAvB;AAMAR,IAAAA,KAAK,GAAGC,cAAc,CAACI,cAAD,CAAtB;AACA,WAAOF,MAAM,CAACC,WAAd;AACH,GATC,MASK;AACHJ,IAAAA,KAAK,GAAGC,cAAc,EAAtB;AACH,GAfmD,CAiBlD;;;AACAE,EAAAA,MAAM,CAACH,KAAP,GAAeA,KAAf;AACAG,EAAAA,MAAM,CAACO,QAAP,GAAkBV,KAAK,CAACU,QAAxB,CAnBkD,CAoBlD;AACA;AAEA;AACD,CAxBD","sourcesContent":["import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  let store = configureStore();\n  const root = document.getElementById(\"root\");\n\n  if (window.currentUser) {\n    const preloadedState = {\n        entities: {\n            users: { [window.currentUser.id]: window.currentUser },\n        },\n        session: { id: window.currentUser.id }\n    };\n    store = configureStore(preloadedState);\n    delete window.currentUser;\n} else {\n    store = configureStore();\n}\n\n  // FOR TESTING ONLY\n  window.store = store;\n  window.getState = store.getState;\n  // window.dispatch = store.dispatch;\n  // FOR TESTING ONLY\n\n  // ReactDOM.render(<Root store={ store } />, root);\n});"]},"metadata":{},"sourceType":"module"}