{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/aymak91/CIT-382/project-3-starter-sample/src/index.js\";\nimport { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this), rootElement);\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  //   let store = configureStore();\n  //   const root = document.getElementById(\"root\");\n  //   if (window.currentUser) {\n  //     const preloadedState = {\n  //         entities: {\n  //             users: { [window.currentUser.id]: window.currentUser },\n  //         },\n  //         session: { id: window.currentUser.id }\n  //     };\n  //     store = configureStore(preloadedState);\n  //     delete window.currentUser;\n  // } else {\n  //     store = configureStore();\n  // }\n  // FOR TESTING ONLY\n  // window.store = store;\n  window.getState = store.getState; // window.dispatch = store.dispatch;\n  // FOR TESTING ONLY\n  // ReactDOM.render(<Root store={ store } />, root);\n});","map":{"version":3,"sources":["/home/aymak91/CIT-382/project-3-starter-sample/src/index.js"],"names":["StrictMode","ReactDOM","App","rootElement","document","getElementById","render","addEventListener","window","getState","store"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACAJ,QAAQ,CAACK,MAAT,eACE,QAAC,UAAD;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEH,WAJF;AAOAC,QAAQ,CAACG,gBAAT,CAA0B,kBAA1B,EAA8C,MAAM;AACpD;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AACA;AACAC,EAAAA,MAAM,CAACC,QAAP,GAAkBC,KAAK,CAACD,QAAxB,CAnBkD,CAoBlD;AACA;AAEA;AACD,CAxBD","sourcesContent":["import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n//   let store = configureStore();\n//   const root = document.getElementById(\"root\");\n\n//   if (window.currentUser) {\n//     const preloadedState = {\n//         entities: {\n//             users: { [window.currentUser.id]: window.currentUser },\n//         },\n//         session: { id: window.currentUser.id }\n//     };\n//     store = configureStore(preloadedState);\n//     delete window.currentUser;\n// } else {\n//     store = configureStore();\n// }\n\n  // FOR TESTING ONLY\n  // window.store = store;\n  window.getState = store.getState;\n  // window.dispatch = store.dispatch;\n  // FOR TESTING ONLY\n\n  // ReactDOM.render(<Root store={ store } />, root);\n});"]},"metadata":{},"sourceType":"module"}